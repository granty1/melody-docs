{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{207:function(s,e,a){\"use strict\";a.r(e);var n=a(28),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"简介\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#简介\"}},[s._v(\"#\")]),s._v(\" 简介\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"/min-melody-logo.png\",alt:\"Melody\"}})]),s._v(\" \"),a(\"p\",[a(\"em\",[s._v(\"Melody\")]),s._v(\" 是一个高性能的开源API网关。\")]),s._v(\" \"),a(\"p\",[s._v(\"它的核心功能是创建一个API，将许多微服务聚合到单个端点中，为您自动完成繁重的工作：聚合、转换、过滤、解码、限制、身份验证等等。\")]),s._v(\" \"),a(\"p\",[a(\"em\",[s._v(\"Melody\")]),s._v(\" 不需要编程，因为它提供了一种声明性的方法来创建端点。它具有良好的结构和层次，可以使用社区或内部开发的即插即用中间件扩展其功能。\")]),s._v(\" \"),a(\"p\",[a(\"em\",[s._v(\"Melody\")]),s._v(\" 专注于成为一个纯粹的API网关，而不是连接到HTTP传输层。\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"为什么需要api网关\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#为什么需要api网关\"}},[s._v(\"#\")]),s._v(\" 为什么需要API网关\")]),s._v(\" \"),a(\"p\",[s._v(\"当API内容的使用者（特别是在microservices中）查询后端服务时，实现会因其microservices响应的大小和复杂性而承受很大的复杂性和负担。\")]),s._v(\" \"),a(\"p\",[a(\"em\",[s._v(\"Melody\")]),s._v(\" 是一个API网关，位于客户机和所有源服务器之间，添加了一个新的层，该层消除了客户机的所有复杂性，只为他们提供UI所需的信息。\")]),s._v(\" \"),a(\"p\",[a(\"em\",[s._v(\"Melody\")]),s._v(\" 充当多个源到单个端点的聚合器，允许您对响应进行分组、包装、转换和收缩。此外，它还支持多种中间件和插件，允许您扩展功能，例如添加OAuth授权或安全层（SSL、证书、HTTP严格传输安全、点击劫持保护、HTTP公钥固定、MIME嗅探保护、XSS保护）。\")]),s._v(\" \"),a(\"p\",[a(\"em\",[s._v(\"Melody\")]),s._v(\" 是在Go中编写的，支持多个平台，并基于KrakenD框架。\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"举个🌰\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#举个🌰\"}},[s._v(\"#\")]),s._v(\" 举个🌰\")]),s._v(\" \"),a(\"p\",[s._v(\"移动开发人员需要构建一个单独的首页，该首页需要从多个呼叫到其后端服务的数据，例如：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"api.store.server/products\\napi.store.server/marketing-promos\\napi.users.server/users/{id_user}\\napi.users.server/shopping-cart/{id_user}\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])]),a(\"p\",[s._v(\"屏幕很简单，只需要从4个不同的源检索数据，等待往返，然后从响应中只选择几个字段。移动客户端不必进行这些调用，而是可以将单个端点调用给_Melody_ ：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"melody.server/frontpage/{id_user}\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\")])]),a(\"p\",[s._v(\"整个过程变成了这样：\")]),s._v(\" \"),a(\"p\",[s._v(\"通过选择此实现，移动客户端将自己与后端实现隔离。每当后端更改配置时，移动客户端的API配置不用改变，并且通过简单的配置更改来更新网关。\")]),s._v(\" \"),a(\"p\",[s._v(\"同时，后端生成的数据量与最终传输到客户端的数据量之间存在大小差异。\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"安装melody\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#安装melody\"}},[s._v(\"#\")]),s._v(\" 安装Melody\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"下载二进制文件\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#下载二进制文件\"}},[s._v(\"#\")]),s._v(\" 下载二进制文件\")]),s._v(\" \"),a(\"p\",[a(\"em\",[s._v(\"Melody\")]),s._v(\" 使用go编写，build之后是单个二进制文件，无需任何依赖，所以你可以直接前往下载\"),a(\"a\",{attrs:{href:\"https://github.com/granty1/melody/releases/tag/v1.0\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"Melody1.0\"),a(\"OutboundLink\")],1)]),s._v(\" \"),a(\"h3\",{attrs:{id:\"通过源码编译\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#通过源码编译\"}},[s._v(\"#\")]),s._v(\" 通过源码编译\")]),s._v(\" \"),a(\"p\",[s._v(\"首先git你应该安装好\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"git\")]),s._v(\" clone git@github.com:granty1/melody.git\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\")])]),a(\"p\",[s._v(\"这样 \"),a(\"em\",[s._v(\"Melody\")]),s._v(\" 的全部代码就已经拉取到了你的本地\")]),s._v(\" \"),a(\"p\",[s._v(\"执行编译命令\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"make\")]),s._v(\" build\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\")])]),a(\"p\",[s._v(\"在你的目录下会多出一个二进制文件\"),a(\"code\",[s._v(\"melody\")]),s._v(\"，如果是windows环境会多出\"),a(\"code\",[s._v(\"melody.exe\")])]),s._v(\" \"),a(\"h2\",{attrs:{id:\"使用melody\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用melody\"}},[s._v(\"#\")]),s._v(\" 使用Melody\")]),s._v(\" \"),a(\"p\",[a(\"em\",[s._v(\"Melody\")]),s._v(\" 使用起来非常简单。它只要求您传递配置文件的路径（定义行为和端点）。另外，您可以使用-d标志启用调试，这几乎就是所有的命令。\")]),s._v(\" \"),a(\"p\",[s._v(\"使用终结点定义生成配置文件。生成它的简单方法是使用\"),a(\"a\",{attrs:{href:\"https://github.com/granty1/melody\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"Melody Designer\"),a(\"OutboundLink\")],1)]),s._v(\" \"),a(\"p\",[s._v(\"获取到的配置文件应该像这样\"),a(\"a\",{attrs:{href:\"https://github.com/granty1/melody/blob/v1.0/melody.json\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"melody.json\"),a(\"OutboundLink\")],1)]),s._v(\" \"),a(\"p\",[s._v(\"通过\"),a(\"code\",[s._v(\"check\")]),s._v(\"命令去检察你的配置文件格式是否存在问题\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[s._v(\"./melody check -c melody.json -d\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\")])]),a(\"p\",[s._v(\"启动 \"),a(\"em\",[s._v(\"Melody\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[s._v(\"./melody run -c melody.json -d\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\")])]),a(\"h3\",{attrs:{id:\"详细命令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#详细命令\"}},[s._v(\"#\")]),s._v(\" 详细命令\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[s._v(\"\\n███╗   ███╗███████╗██╗      ██████╗ ██████╗ ██╗   ██╗\\n████╗ ████║██╔════╝██║     ██╔═══██╗██╔══██╗╚██╗ ██╔╝\\n██╔████╔██║█████╗  ██║     ██║   ██║██║  ██║ ╚████╔╝ \\n██║╚██╔╝██║██╔══╝  ██║     ██║   ██║██║  ██║  ╚██╔╝  \\n██║ ╚═╝ ██║███████╗███████╗╚██████╔╝██████╔╝   ██║   \\n╚═╝     ╚═╝╚══════╝╚══════╝ ╚═════╝ ╚═════╝    ╚═╝   \\n                                                     \\nVersion:1.0.0\\n\\nMelody \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"help\")]),s._v(\" you to \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"sort\")]),s._v(\" out your complex api\\n\\nUsage:\\n  melody \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"command\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\\nAvailable Commands:\\n  check       check that the config\\n  graph       generate graph of melody server\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"help\")]),s._v(\"        Help about any \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"command\")]),s._v(\"\\n  run         run the Melody server\\n\\nFlags:\\n  -c, --config string   Path of the melody.json\\n  -d, --debug           Enable the Melody debug\\n  -h, --help            \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"help\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" melody\\n\\nUse \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"melody [command] --help\"')]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"more\")]),s._v(\" information about a command.\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\")])]),a(\"p\",[a(\"em\",[s._v(\"Melody\")]),s._v(\" 提供了四个命令供您使用:\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[s._v(\"melody check\")]),s._v(\" (检察配置文件内容格式是否正确)\")]),s._v(\" \"),a(\"li\",[a(\"code\",[s._v(\"melody graph\")]),s._v(\"  (根据配置文件生成有向图，预览网关结构)\")]),s._v(\" \"),a(\"li\",[a(\"code\",[s._v(\"melody help\")]),s._v(\"   (查看帮助)\")]),s._v(\" \"),a(\"li\",[a(\"code\",[s._v(\"melody run\")]),s._v(\"\\t  (运行网关)\")])])])}),[],!1,null,null,null);e.default=t.exports}}]);","extractedComments":[]}